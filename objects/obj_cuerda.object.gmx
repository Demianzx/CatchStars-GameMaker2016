<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cuerda</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale=0.5;
image_yscale=0.5;
colision=false;

global.spd=10;
global.launch=10;
x=obj_apuntador.x;
y=obj_apuntador.y;
image_angle=obj_apuntador.image_angle;
direction=obj_apuntador.image_angle;
speed=global.launch;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///al dar touch/clic
if(global.click=true){

    if(mouse_check_button_pressed(mb_left)){
    if(!instance_exists(obj_cuerda)){
    click=false
    direction=obj_apuntador.image_angle;
    image_angle=obj_apuntador.image_angle;
    speed=global.launch;
    x=obj_apuntador.x;
    y=obj_apuntador.y;
}
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///colision con paredes
var ex, ey;
ex = instance_nearest(x, y, obj_apuntador).x;
ey = instance_nearest(x, y, obj_apuntador).y;
    //rebote de cuerda en las paredes
if(y&lt;=0){
   direction = point_direction(x, y, ex, ey);
   speed=global.spd;
   }
if(x&lt;=0){
   direction = point_direction(x, y, ex, ey);
   speed=global.spd;
   }
if(x&gt;=1280){
   direction = point_direction(x, y, ex, ey);
   speed=global.spd;
   }
   //cuando regrese cuerda al origen
if(y&gt;720){
   
   //colision=false;
         
   global.click=true;
   if(obj_apuntador.continuar=1)obj_apuntador.aumentar=true;
   else obj_apuntador.disminuir=true; 
   instance_destroy();        
   }

   //al colisionar con algo
if (colision=true){
    direction = point_direction(x, y, ex, ey);
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
